#!usr/bin/env python3
import base64
import cryptography
import os
from cryptography.fernet import Fernet


class {{class_name}}Decryptor(): 
    name = {{name}}
    
    def __init__(self, extension=None, key=None, secret_key=None, root_path='/'):
        self.__key       = key
        self.__cryptor   = Fernet(self.__key)
        self.__root_path = root_path
        self.__extension = extension


    def decrypt_all(self):
        for dir_, _, files in os.walk(self.__root_path):
            for file_ in files:
                file_path = os.path.join(dir_, file_)
                
                if (file_.split('.')[-1] == self.__extension):
                    try:
                        self.__decrypt_file(os.path.join(dir_, file_))
                    except KeyboardInterrupt:
                        exit
                    except cryptography.fernet.InvalidToken:
                        print('Invalid Token: (file) ' + file_path)
                    except:
                        print('Unknown Error Occured: (file) ' + file_path)


    def __decrypt_file(self, file_name):
        with open(file_name, 'rb') as f:
            encrypted_file = f.read()

        with open(file_name, 'wb') as f:
            decrypted_file = self.__cryptor.decrypt(encrypted_file)
            encrypted_file = decrypted_file[:len(decrypted_file)-40]
            decrypted_file = base64.b64decode(decrypted_file)

            new_name       = file_name.rsplit('.', 1)[0]
            new_name       = ''.join(new_name)

            f.write(decrypted_file)
            os.rename(file_name, new_name)



{{object_name}}_d = {{class_name}}Decryptor(
    key       = {{key}},
    root_path = {{root_path}},
    extension = {{extension}}
)

{{object_name}}_d.decrypt_all()
rw_name = {{class_name}}Decryptor.name

print('OK!!')
print("Dekripsi File Berhasil :'v")